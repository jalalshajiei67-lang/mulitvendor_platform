name: Deploy to CapRover

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to CapRover
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CapRover CLI
        run: npm install -g caprover

      - name: Create backend deployment tarball
        run: |
          tar -czf backend-deploy.tar.gz \
            captain-definition-backend \
            Dockerfile.backend \
            multivendor_platform/ \
            requirements.txt \
            --exclude=multivendor_platform/front_end \
            --exclude=multivendor_platform/multivendor_platform/venv \
            --exclude=multivendor_platform/multivendor_platform/__pycache__ \
            --exclude=multivendor_platform/multivendor_platform/*/__pycache__ \
            --exclude=multivendor_platform/multivendor_platform/*/migrations/__pycache__ \
            --exclude=*.pyc \
            --exclude=*.pyo

      - name: Deploy Backend to CapRover
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_APP_NAME: ${{ secrets.CAPROVER_BACKEND_APP_NAME }}
        run: |
          caprover deploy \
            --caproverUrl "$CAPROVER_URL" \
            --caproverPassword "$CAPROVER_PASSWORD" \
            --appName "$CAPROVER_APP_NAME" \
            --tarFile backend-deploy.tar.gz

      - name: Run database migrations
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_APP_NAME: ${{ secrets.CAPROVER_BACKEND_APP_NAME }}
        run: |
          caprover apps:exec "$CAPROVER_APP_NAME" \
            --caproverUrl "$CAPROVER_URL" \
            --caproverPassword "$CAPROVER_PASSWORD" \
            --command "python manage.py migrate --noinput"

      - name: Collect static files
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_APP_NAME: ${{ secrets.CAPROVER_BACKEND_APP_NAME }}
        run: |
          caprover apps:exec "$CAPROVER_APP_NAME" \
            --caproverUrl "$CAPROVER_URL" \
            --caproverPassword "$CAPROVER_PASSWORD" \
            --command "python manage.py collectstatic --noinput"

      - name: Backend deployment successful
        run: |
          echo "‚úÖ Backend deployed successfully to CapRover!"
          echo "üîó Backend URL: https://backend.indexo.ir"

  deploy-frontend:
    name: Deploy Frontend to CapRover
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: deploy-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CapRover CLI
        run: npm install -g caprover

      - name: Create frontend deployment tarball
        run: |
          tar -czf frontend-deploy.tar.gz \
            captain-definition-frontend \
            Dockerfile.frontend \
            multivendor_platform/front_end/ \
            nginx/frontend.conf \
            --exclude=multivendor_platform/front_end/node_modules \
            --exclude=multivendor_platform/front_end/dist

      - name: Deploy Frontend to CapRover
        env:
          CAPROVER_URL: ${{ secrets.CAPROVER_URL }}
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_APP_NAME: ${{ secrets.CAPROVER_FRONTEND_APP_NAME }}
        run: |
          caprover deploy \
            --caproverUrl "$CAPROVER_URL" \
            --caproverPassword "$CAPROVER_PASSWORD" \
            --appName "$CAPROVER_APP_NAME" \
            --tarFile frontend-deploy.tar.gz

      - name: Frontend deployment successful
        run: |
          echo "‚úÖ Frontend deployed successfully to CapRover!"
          echo "üîó Frontend URL: https://indexo.ir"

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Deployment Status
        run: |
          echo "=========================================="
          echo "üöÄ DEPLOYMENT SUMMARY"
          echo "=========================================="
          echo "Backend Status: ${{ needs.deploy-backend.result }}"
          echo "Frontend Status: ${{ needs.deploy-frontend.result }}"
          echo "=========================================="
          echo "üìç URLs:"
          echo "  Frontend: https://indexo.ir"
          echo "  Backend: https://backend.indexo.ir/api"
          echo "  Admin: https://backend.indexo.ir/admin"
          echo "=========================================="

